-- MySQL Script generated by MySQL Workbench
-- Sat Oct 28 10:18:10 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema test
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `test` ;

-- -----------------------------------------------------
-- Schema test
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `test` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema linyaqing
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `linyaqing` ;

-- -----------------------------------------------------
-- Schema linyaqing
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `linyaqing` DEFAULT CHARACTER SET utf8 ;
USE `test` ;

-- -----------------------------------------------------
-- Table `test`.`Students`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test`.`Students` ;

CREATE TABLE IF NOT EXISTS `test`.`Students` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `age` TINYINT(3) NULL,
  `gender` CHAR(1) NULL COMMENT '性别：\n0：女\n1：男',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test`.`Teachers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test`.`Teachers` ;

CREATE TABLE IF NOT EXISTS `test`.`Teachers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test`.`Courses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test`.`Courses` ;

CREATE TABLE IF NOT EXISTS `test`.`Courses` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `teacher_id` INT NULL,
  `Teachers_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Courses_Teachers1_idx` (`Teachers_id` ASC),
  CONSTRAINT `fk_Courses_Teachers1`
    FOREIGN KEY (`Teachers_id`)
    REFERENCES `test`.`Teachers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `test`.`Scores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `test`.`Scores` ;

CREATE TABLE IF NOT EXISTS `test`.`Scores` (
  `student_id` INT NOT NULL,
  `course_id` INT NOT NULL,
  `score` TINYINT(3) NULL,
  `Students_id` INT UNSIGNED NOT NULL,
  `Courses_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`student_id`, `course_id`),
  INDEX `fk_Scores_Students1_idx` (`Students_id` ASC),
  INDEX `fk_Scores_Courses1_idx` (`Courses_id` ASC),
  CONSTRAINT `fk_Scores_Students1`
    FOREIGN KEY (`Students_id`)
    REFERENCES `test`.`Students` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Scores_Courses1`
    FOREIGN KEY (`Courses_id`)
    REFERENCES `test`.`Courses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `linyaqing` ;

-- -----------------------------------------------------
-- Table `linyaqing`.`permissions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`permissions` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`permissions` (
  `id` TINYINT(1) UNSIGNED NOT NULL AUTO_INCREMENT,
  `permission_name` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
AUTO_INCREMENT = 10
DEFAULT CHARACTER SET = utf8
COMMENT = '应用能够获取到的用户权限';


-- -----------------------------------------------------
-- Table `linyaqing`.`sa_region`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`sa_region` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`sa_region` (
  `id` MEDIUMINT(6) UNSIGNED NOT NULL DEFAULT '0',
  `pid` MEDIUMINT(6) UNSIGNED NOT NULL DEFAULT '0' COMMENT '上级id',
  `name` VARCHAR(100) NOT NULL DEFAULT '',
  `type` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '类型：0-省，1-市，2-县',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `linyaqing`.`sa_region2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`sa_region2` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`sa_region2` (
  `id` MEDIUMINT(6) UNSIGNED NOT NULL DEFAULT '0',
  `pid` MEDIUMINT(6) UNSIGNED NOT NULL DEFAULT '0' COMMENT '上级id',
  `name` VARCHAR(100) NOT NULL DEFAULT '',
  `type` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '类型：0-省，1-市，2-县',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `linyaqing`.`sa_region3`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`sa_region3` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`sa_region3` (
  `id` MEDIUMINT(6) UNSIGNED NOT NULL DEFAULT '0',
  `pid` MEDIUMINT(6) UNSIGNED NOT NULL DEFAULT '0' COMMENT '上级id',
  `name` VARCHAR(100) NOT NULL DEFAULT '',
  `type` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '类型：0-省，1-市，2-县',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `linyaqing`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`users` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`users` (
  `user_id` INT(9) NOT NULL,
  `is_developer` CHAR(1) NULL DEFAULT '1' COMMENT '是否注册为开发者：\n0：是\n1：否',
  `is_admin` CHAR(1) NULL DEFAULT '1' COMMENT '是否是管理员\n0： 是\n1： 不是',
  `user_name` VARCHAR(90) NULL DEFAULT NULL COMMENT '用户名',
  `first_name` VARCHAR(45) NULL DEFAULT NULL COMMENT '名',
  `last_name` VARCHAR(45) NULL DEFAULT NULL COMMENT '姓',
  `phone` VARCHAR(14) NULL DEFAULT NULL COMMENT '手机号码',
  `email` VARCHAR(45) NULL DEFAULT NULL COMMENT '邮件',
  `password` VARCHAR(45) NULL DEFAULT NULL,
  `province_code` CHAR(6) NULL DEFAULT NULL COMMENT '省代码',
  `city_code` CHAR(6) NULL DEFAULT NULL COMMENT '市代码',
  `town_code` CHAR(6) NULL DEFAULT NULL COMMENT '县区代码',
  `image_md5` VARCHAR(255) NULL DEFAULT NULL COMMENT '用户头像，MD5格式',
  `personal_site` VARCHAR(255) NULL DEFAULT NULL COMMENT '个人网站',
  `instagram` VARCHAR(45) NULL DEFAULT NULL COMMENT 'instagram用户名',
  `twitter` VARCHAR(45) NULL DEFAULT NULL COMMENT 'twitter 用户名',
  `location` VARCHAR(255) NULL DEFAULT NULL COMMENT '地址',
  `bio` TINYTEXT CHARACTER SET 'dec8' COLLATE 'dec8_bin' NULL DEFAULT NULL COMMENT '个人简介',
  `email_settings` VARCHAR(45) NULL DEFAULT '1,2,3,4,5,6,7,8' COMMENT '用户的邮件设置，id之间用逗号分隔',
  `created_time` TIMESTAMP NULL DEFAULT NULL,
  `dev_url` VARCHAR(255) NULL,
  `dev_desc` TINYTEXT NULL,
  `sa_region_id` MEDIUMINT(6) UNSIGNED NOT NULL,
  `sa_region2_id` MEDIUMINT(6) UNSIGNED NOT NULL,
  `sa_region3_id` MEDIUMINT(6) UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `fk_users_sa_region1_idx` (`sa_region_id` ASC),
  INDEX `fk_users_sa_region21_idx` (`sa_region2_id` ASC),
  INDEX `fk_users_sa_region31_idx` (`sa_region3_id` ASC),
  CONSTRAINT `fk_users_sa_region1`
    FOREIGN KEY (`sa_region_id`)
    REFERENCES `linyaqing`.`sa_region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_sa_region21`
    FOREIGN KEY (`sa_region2_id`)
    REFERENCES `linyaqing`.`sa_region2` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_sa_region31`
    FOREIGN KEY (`sa_region3_id`)
    REFERENCES `linyaqing`.`sa_region3` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '存储注册用户的相关信息';


-- -----------------------------------------------------
-- Table `linyaqing`.`applications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`applications` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`applications` (
  `app_id` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT(9) NULL,
  `app_name` VARCHAR(45) NULL DEFAULT NULL,
  `app_desc` VARCHAR(255) NULL,
  `created_time` TIMESTAMP NULL DEFAULT NULL,
  `callback_url` VARCHAR(255) NULL DEFAULT NULL,
  `status` CHAR(1) NULL DEFAULT '0' COMMENT '0: connected\n1: not connected',
  `hourly_rate_limit` SMALLINT(4) NULL DEFAULT NULL COMMENT '每小时最大访问数',
  `users_user_id` INT(9) NOT NULL,
  PRIMARY KEY (`app_id`),
  INDEX `fk_applications_users1_idx` (`users_user_id` ASC),
  CONSTRAINT `fk_applications_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `linyaqing`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '用户关联到网站的应用';


-- -----------------------------------------------------
-- Table `linyaqing`.`products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`products` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`products` (
  `product_id` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `product_md5` VARCHAR(255) NULL DEFAULT NULL COMMENT '商品封面',
  `product_name` VARCHAR(45) NULL DEFAULT NULL COMMENT '商品名',
  `creater_name` VARCHAR(45) NULL DEFAULT NULL COMMENT '作者',
  `product_price` DECIMAL(10,0) NULL DEFAULT NULL COMMENT '产品价格',
  `profits_share` CHAR(1) NULL DEFAULT '0' COMMENT '作者得到利润的30%\n0： true\n1: false',
  `created_time` TIMESTAMP NULL DEFAULT NULL COMMENT '商品创建时间',
  `self` CHAR(1) NULL DEFAULT '0' COMMENT '产品是否自营\n0： 自营\n1： 非自营',
  `friends` CHAR(1) NULL DEFAULT '1' COMMENT '产品是否是友情赞助的\n0：是\n1：否',
  `product_desc` TINYTEXT NULL DEFAULT NULL COMMENT '产品描述',
  `product_size` VARCHAR(2) NULL DEFAULT NULL COMMENT '产品规格：xs, s, m, l, xl',
  `body_length` TINYINT(3) NULL DEFAULT NULL COMMENT '衣长',
  `chest` TINYINT(3) NULL DEFAULT NULL COMMENT '胸围',
  `sleeve` TINYINT(3) NULL DEFAULT NULL COMMENT '袖长',
  `product_pics_md5` VARCHAR(45) NULL DEFAULT NULL COMMENT '五张没有描述性文字的图片的MD5，之间用逗号分隔',
  `product_pics_and_desc_id` INT(9) NULL DEFAULT NULL COMMENT '五张有描述性文字的图片的id，需要去另外一个表查找图片和描述性文字',
  PRIMARY KEY (`product_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '商品列表';


-- -----------------------------------------------------
-- Table `linyaqing`.`carts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`carts` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`carts` (
  `user_id` INT(9) NOT NULL COMMENT '用户id',
  `product_id` INT(9) NOT NULL COMMENT '加入购物车的商品id',
  `product_quantity` SMALLINT(4) NULL DEFAULT NULL,
  `users_user_id` INT(9) NOT NULL,
  `products_product_id` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`, `product_id`),
  INDEX `fk_carts_users1_idx` (`users_user_id` ASC),
  INDEX `fk_carts_products1_idx` (`products_product_id` ASC),
  CONSTRAINT `fk_carts_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `linyaqing`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_carts_products1`
    FOREIGN KEY (`products_product_id`)
    REFERENCES `linyaqing`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '购物车，记录登录用户将哪些商品放入购物车。如果是非登录用户将商品放入购物车，则用localStorage在本地记住就好';


-- -----------------------------------------------------
-- Table `linyaqing`.`categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`categories` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`categories` (
  `category_id` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `category_name` VARCHAR(45) NULL DEFAULT NULL COMMENT '类别的名称',
  `category_image_md5` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`category_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 15
DEFAULT CHARACTER SET = utf8
COMMENT = '按类别分类的图片集';


-- -----------------------------------------------------
-- Table `linyaqing`.`collections`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`collections` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`collections` (
  `collection_id` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `verified_user_id` INT(9) NULL,
  `collection_name` VARCHAR(45) NULL DEFAULT NULL,
  `collection_photo_nums` SMALLINT(4) NULL DEFAULT NULL,
  `created_time` TIMESTAMP NULL DEFAULT NULL,
  `is_curated` CHAR(1) NULL DEFAULT '1' COMMENT '是否是画展图片\n0： 是\n1： 不是\n由admin判断，该collection的命名都为‘collection#’+collection的数字，递增',
  `is_featured` CHAR(1) NULL DEFAULT '1' COMMENT '是否是分类图片：\n0：是\n1：不是\n放在collection这一层，由admin判断：该collection利玛窦图片都属于同一类型',
  `is_verified` CHAR(1) NULL DEFAULT '1' COMMENT '是否已经被审核员标注过\n0：是\n1：否',
  `users_user_id` INT(9) NOT NULL,
  PRIMARY KEY (`collection_id`),
  INDEX `fk_collections_users1_idx` (`users_user_id` ASC),
  CONSTRAINT `fk_collections_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `linyaqing`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '图片集合';


-- -----------------------------------------------------
-- Table `linyaqing`.`curated`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`curated` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`curated` (
  `curated_id` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `curated_name` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`curated_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '画展';


-- -----------------------------------------------------
-- Table `linyaqing`.`customers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`customers` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`customers` (
  `customer_id` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NULL DEFAULT NULL,
  `first_name` VARCHAR(45) NULL DEFAULT NULL,
  `last_name` VARCHAR(45) NULL DEFAULT NULL,
  `company` VARCHAR(45) NULL DEFAULT NULL,
  `address` VARCHAR(90) NULL DEFAULT NULL,
  `apt` VARCHAR(45) NULL DEFAULT NULL COMMENT '公寓',
  `city_code` CHAR(6) NULL DEFAULT NULL,
  `province_code` CHAR(6) NULL DEFAULT NULL,
  `town_code` CHAR(6) NULL DEFAULT NULL,
  `phone` CHAR(13) NULL DEFAULT NULL,
  `postal_code` VARCHAR(6) NULL DEFAULT NULL,
  `card_num` CHAR(16) NULL DEFAULT NULL,
  `name_on_card` VARCHAR(45) NULL DEFAULT NULL,
  `mm/yy` CHAR(5) NULL DEFAULT NULL,
  `cvv` CHAR(3) NULL DEFAULT NULL,
  `rememberMe` CHAR(1) NULL DEFAULT '0' COMMENT '是否记住用户的信用卡和收货人收货地址信息\n0：记住\n1：不记住',
  `sa_region_id` MEDIUMINT(6) UNSIGNED NOT NULL,
  `sa_region2_id` MEDIUMINT(6) UNSIGNED NOT NULL,
  `sa_region3_id` MEDIUMINT(6) UNSIGNED NOT NULL,
  PRIMARY KEY (`customer_id`, `sa_region2_id`),
  INDEX `fk_customers_sa_region1_idx` (`sa_region_id` ASC),
  INDEX `fk_customers_sa_region21_idx` (`sa_region2_id` ASC),
  INDEX `fk_customers_sa_region31_idx` (`sa_region3_id` ASC),
  CONSTRAINT `fk_customers_sa_region1`
    FOREIGN KEY (`sa_region_id`)
    REFERENCES `linyaqing`.`sa_region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers_sa_region21`
    FOREIGN KEY (`sa_region2_id`)
    REFERENCES `linyaqing`.`sa_region2` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customers_sa_region31`
    FOREIGN KEY (`sa_region3_id`)
    REFERENCES `linyaqing`.`sa_region3` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '收货人信息';


-- -----------------------------------------------------
-- Table `linyaqing`.`email_settings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`email_settings` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`email_settings` (
  `settings_id` INT(9) UNSIGNED NOT NULL,
  `settings_name` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`settings_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '邮件设置';


-- -----------------------------------------------------
-- Table `linyaqing`.`featured`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`featured` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`featured` (
  `featured_id` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `featured_name` VARCHAR(45) NULL DEFAULT NULL COMMENT '专题的名称',
  PRIMARY KEY (`featured_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '类别';


-- -----------------------------------------------------
-- Table `linyaqing`.`images`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`images` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`images` (
  `image_id` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `image_md5` VARCHAR(255) NULL DEFAULT NULL COMMENT '图片MD5',
  `user_id` INT(9) NULL DEFAULT NULL COMMENT '图片上传者的id',
  `created_time` TIMESTAMP NULL DEFAULT NULL COMMENT '图片创建的时间',
  `collection_id` INT(9) NULL DEFAULT NULL COMMENT '图片所属图片集的id',
  `image_tags` VARCHAR(90) NULL DEFAULT NULL COMMENT '图片的标签',
  `enough_tags` CHAR(1) NULL DEFAULT '1' COMMENT '是否有足够的标签（5个）\n0：是\n1：否',
  `make` VARCHAR(45) NULL DEFAULT NULL COMMENT '相机品牌',
  `model` VARCHAR(45) NULL DEFAULT NULL COMMENT '相机型号',
  `focalLength` VARCHAR(45) NULL DEFAULT NULL COMMENT '焦距',
  `aperture` VARCHAR(45) NULL DEFAULT NULL COMMENT '光圈',
  `iso` VARCHAR(45) NULL DEFAULT NULL COMMENT '感光度',
  `shutterSpeed` VARCHAR(45) NULL DEFAULT NULL COMMENT '快门速度',
  `story_title` VARCHAR(45) NULL DEFAULT NULL COMMENT '照片名称',
  `story_detail` TINYTEXT NULL DEFAULT NULL COMMENT '照片故事',
  `location` VARCHAR(45) NULL DEFAULT NULL COMMENT '拍摄地址',
  `display_location` CHAR(1) NULL DEFAULT '0' COMMENT '0:展示\n1:不展示',
  `collabs` VARCHAR(45) NULL DEFAULT NULL COMMENT '合作者的id，用逗号分隔',
  `liked` SMALLINT(5) NULL DEFAULT NULL,
  `users_user_id` INT(9) NOT NULL,
  `collections_collection_id` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`image_id`),
  INDEX `fk_images_users1_idx` (`users_user_id` ASC),
  INDEX `fk_images_collections1_idx` (`collections_collection_id` ASC),
  CONSTRAINT `fk_images_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `linyaqing`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_images_collections1`
    FOREIGN KEY (`collections_collection_id`)
    REFERENCES `linyaqing`.`collections` (`collection_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = '单张图片';


-- -----------------------------------------------------
-- Table `linyaqing`.`inventories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`inventories` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`inventories` (
  `product_id` INT(9) UNSIGNED NOT NULL AUTO_INCREMENT,
  `inventory` SMALLINT(5) NULL DEFAULT NULL,
  `unit` VARCHAR(45) NULL DEFAULT NULL COMMENT '单位：件、个、幅等',
  `location` VARCHAR(45) NULL DEFAULT NULL,
  `products_product_id` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`product_id`),
  INDEX `fk_inventories_products1_idx` (`products_product_id` ASC),
  CONSTRAINT `fk_inventories_products1`
    FOREIGN KEY (`products_product_id`)
    REFERENCES `linyaqing`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `linyaqing`.`orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`orders` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`orders` (
  `order_id` INT(9) NOT NULL,
  `customer_id` INT(9) NULL DEFAULT NULL,
  `customers_customer_id` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`order_id`),
  INDEX `fk_orders_customers1_idx` (`customers_customer_id` ASC),
  CONSTRAINT `fk_orders_customers1`
    FOREIGN KEY (`customers_customer_id`)
    REFERENCES `linyaqing`.`customers` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `linyaqing`.`order_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`order_details` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`order_details` (
  `order_id` INT(9) NOT NULL,
  `product_id` INT(9) NOT NULL,
  `quantity` SMALLINT(4) NULL DEFAULT NULL,
  `products_product_id` INT(9) UNSIGNED NOT NULL,
  `orders_order_id` INT(9) NOT NULL,
  PRIMARY KEY (`order_id`, `product_id`),
  INDEX `fk_order_details_products1_idx` (`products_product_id` ASC),
  INDEX `fk_order_details_orders1_idx` (`orders_order_id` ASC),
  CONSTRAINT `fk_order_details_products1`
    FOREIGN KEY (`products_product_id`)
    REFERENCES `linyaqing`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_details_orders1`
    FOREIGN KEY (`orders_order_id`)
    REFERENCES `linyaqing`.`orders` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `linyaqing`.`user_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`user_category` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`user_category` (
  `category_id` INT(9) NOT NULL,
  `user_id` INT(9) NOT NULL,
  `categories_category_id` INT(9) UNSIGNED NOT NULL,
  `users_user_id` INT(9) NOT NULL,
  PRIMARY KEY (`category_id`, `user_id`),
  INDEX `fk_user_category_categories1_idx` (`categories_category_id` ASC),
  INDEX `fk_user_category_users1_idx` (`users_user_id` ASC),
  CONSTRAINT `fk_user_category_categories1`
    FOREIGN KEY (`categories_category_id`)
    REFERENCES `linyaqing`.`categories` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_category_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `linyaqing`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `linyaqing`.`user_email`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`user_email` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`user_email` (
  `settings_id` INT(9) NOT NULL,
  `user_id` INT(9) NULL,
  `email_settings_settings_id` INT(9) UNSIGNED NOT NULL,
  `users_user_id` INT(9) NOT NULL,
  PRIMARY KEY (`settings_id`),
  INDEX `fk_user_email_email_settings1_idx` (`email_settings_settings_id` ASC),
  INDEX `fk_user_email_users1_idx` (`users_user_id` ASC),
  CONSTRAINT `fk_user_email_email_settings1`
    FOREIGN KEY (`email_settings_settings_id`)
    REFERENCES `linyaqing`.`email_settings` (`settings_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_email_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `linyaqing`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `linyaqing`.`image_featured`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`image_featured` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`image_featured` (
  `featured_id` INT(9) NOT NULL,
  `image_id` INT(9) NOT NULL,
  `featured_featured_id` INT(9) UNSIGNED NOT NULL,
  `images_image_id` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`featured_id`, `image_id`),
  INDEX `fk_image_featured_featured1_idx` (`featured_featured_id` ASC),
  INDEX `fk_image_featured_images1_idx` (`images_image_id` ASC),
  CONSTRAINT `fk_image_featured_featured1`
    FOREIGN KEY (`featured_featured_id`)
    REFERENCES `linyaqing`.`featured` (`featured_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_image_featured_images1`
    FOREIGN KEY (`images_image_id`)
    REFERENCES `linyaqing`.`images` (`image_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `linyaqing`.`image_curated`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`image_curated` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`image_curated` (
  `curated_id` INT(9) NOT NULL,
  `image_id` INT(9) NOT NULL,
  `curated_curated_id` INT(9) UNSIGNED NOT NULL,
  `images_image_id` INT(9) UNSIGNED NOT NULL,
  PRIMARY KEY (`curated_id`, `image_id`),
  INDEX `fk_image_curated_curated1_idx` (`curated_curated_id` ASC),
  INDEX `fk_image_curated_images1_idx` (`images_image_id` ASC),
  CONSTRAINT `fk_image_curated_curated1`
    FOREIGN KEY (`curated_curated_id`)
    REFERENCES `linyaqing`.`curated` (`curated_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_image_curated_images1`
    FOREIGN KEY (`images_image_id`)
    REFERENCES `linyaqing`.`images` (`image_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `linyaqing`.`app_permision`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`app_permision` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`app_permision` (
  `app_id` INT(9) NOT NULL,
  `permission_id` INT(9) NOT NULL,
  `applications_app_id` INT(9) UNSIGNED NOT NULL,
  `permissions_id` TINYINT(1) UNSIGNED NOT NULL,
  PRIMARY KEY (`app_id`, `permission_id`),
  INDEX `fk_app_permision_applications1_idx` (`applications_app_id` ASC),
  INDEX `fk_app_permision_permissions1_idx` (`permissions_id` ASC),
  CONSTRAINT `fk_app_permision_applications1`
    FOREIGN KEY (`applications_app_id`)
    REFERENCES `linyaqing`.`applications` (`app_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_app_permision_permissions1`
    FOREIGN KEY (`permissions_id`)
    REFERENCES `linyaqing`.`permissions` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `linyaqing`.`relationships`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `linyaqing`.`relationships` ;

CREATE TABLE IF NOT EXISTS `linyaqing`.`relationships` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT(9) NOT NULL,
  `follower_id` INT(9) NOT NULL,
  `users_user_id` INT(9) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_relationships_users1_idx` (`users_user_id` ASC),
  CONSTRAINT `fk_relationships_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `linyaqing`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
